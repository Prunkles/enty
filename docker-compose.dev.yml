version: '3.4'

services:
    db:
        image: postgres
        restart: always
        ports:
            - "55433:5432"
        volumes:
            - ./.cache/docker/db/data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            POSTGRES_DB: enty
            PGDATA: /var/lib/postgresql/data
    mind:
        container_name: mind
        image: mcr.microsoft.com/dotnet/sdk:6.0
        ports:
            - "5010:80"
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - ConnectionStrings__Default=Database=enty; User ID=postgres; Password=password; Host=db; Port=5432;
        volumes:
            - ./src:/enty/src
            - ./lib:/enty/lib
            - ./.cache/docker/mind/.dotnet:/root/.dotnet
            - ./.cache/docker/mind/.local/share/NuGet:/root/.local/share/NuGet
            - ./.cache/docker/mind/.nuget:/root/.nuget
            - ./.cache/docker/mind/bin:/enty/src/enty.Mind.Server/bin
            - ./.cache/docker/mind/obj:/enty/src/enty.Mind.Server/obj
        working_dir: /enty/src/enty.Mind.Server
        depends_on:
            - db
        command: >
            bash -c "
                set -e
                dotnet dev-certs https --trust
                dotnet watch run
            "
    storage:
        container_name: storage
        image: mcr.microsoft.com/dotnet/sdk:6.0
        ports:
            - "5020:80"
        environment:
            - ASPNETCORE_ENVIRONMENT=Development
            - ASPNETCORE_URLS=http://+:80
            - Storage__Path=./storage/
        volumes:
            - ./src:/enty/src
            - ./lib:/enty/lib
            - ./.cache/docker/storage/.dotnet:/root/.dotnet
            - ./.cache/docker/storage/.local/share/NuGet:/root/.local/share/NuGet
            - ./.cache/docker/storage/.nuget:/root/.nuget
            - ./.cache/docker/storage/storage:/enty/src/enty.ResourceStorage.Server/storage
            - ./.cache/docker/storage/bin:/enty/src/enty.ResourceStorage.Server/bin
            - ./.cache/docker/storage/obj:/enty/src/enty.ResourceStorage.Server/obj
        working_dir: /enty/src/enty.ResourceStorage.Server
        command: dotnet watch run
    imaginary:
        container_name: imaginary
        image: h2non/imaginary
        network_mode: host
        environment:
            - PORT=9000
        command: -enable-url-source
#    webapp:
#        container_name: webapp
##        image: prunkles/dotnet-node:dotnet-sdk-6.0_node-16
#        image: mcr.microsoft.com/dotnet/sdk:6.0
#        ports:
#            - "8080:8080"
#        environment:
#            - NODE_ENV=development
#        volumes:
#            - .:/enty
#            - ./.cache/docker/webapp/.dotnet:/root/.dotnet
#            - ./.cache/docker/webapp/.local/share/NuGet:/root/.local/share/NuGet
#            - ./.cache/docker/webapp/.nuget:/root/.nuget
#            - ./.cache/docker/webapp/node_modules:/enty/src/Web/node_modules
#        working_dir: /enty/src/Web
#        depends_on:
#            - mind-gateway
#            - storage
#        entrypoint: >
#            bash -c "
#                dotnet tool restore
#                dotnet fable #npm run watch
#            "
    webapp:
        container_name: webapp
        build:
            context: .
            dockerfile: ./src/Web/Dockerfile
        ports:
            - "8080:80"
        environment:
            - ENTY_MIND_ADDRESS=http://mind:5010/
            - ENTY_STORAGE_ADDRESS=http://localhost:5020/
        depends_on:
            - mind
            - storage
